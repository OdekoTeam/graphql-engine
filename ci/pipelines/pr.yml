resource_types:
- name: pull-request
  type: registry-image
  source:
    repository: teliaoss/github-pr-resource
- name: slack-notification
  type: registry-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: pull-request
  type: pull-request
  check_every: 1h
  webhook_token: ((github-webhook-token))
  source:
    repository: OdekoTeam/graphql-engine
    access_token: ((git-release-token))
- name: pr-docker-image
  type: docker-image
  source:
    repository: docker.odeko.com/odeko/graphql-engine
- name: concourse
  type: git
  check_every: 1h
  source:
    branch: master
    password: ((git-release-token))
    uri: https://github.com/OdekoTeam/concourse.git
    username: ((git-user))
- name: slack-alert
  type: slack-notification
  source:
    url: ((slack-build-webhook-token))

jobs:
- name: test
  public: true
  plan:
  - in_parallel:
    - get: pull-request
      trigger: true
      version: every
    - get: concourse
  - put: pull-request
    params:
      path: pull-request
      context: test
      status: pending
  - task: install-and-test
    privileged: true
    input_mapping:
        repo: pull-request
    file: concourse/tasks/haskell/test/default.yml
  on_failure:
    do:
    - in_parallel:
      - put: pull-request
        params:
          path: pull-request
          context: test
          status: failure
      - task: slack-message
        file: concourse/tasks/common/slack_pr_message.yml
    - put: slack-alert
      params:
        username: 'concourse'
        icon_url: https://concourse-ci.org/images/trademarks/concourse-black.png
        text_file: slack-message/slack-info
        text: |
          :red_circle: *<https://concourse.odeko.com/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}> failed*
          $TEXT_FILE_CONTENT
        silent: true
  on_success:
    do:
    - put: pull-request
      params:
        path: pull-request
        context: test
        status: success
- name: build-image
  public: true
  plan:
  - in_parallel:
    - get: pull-request
      passed:
      - test
      trigger: true
    - get: concourse
  - in_parallel:
    - put: pull-request
      params:
        path: pull-request
        context: build-image
        status: pending
    - task: get-version
      file: concourse/tasks/common/check_docker_pr.yml
  - task: build-executable
    privileged: true
    input_mapping:
        repo: pull-request
    output_mapping:
        repo-executable: pull-request-executable
    file: concourse/tasks/haskell/build/executable.yml
  - put: pr-docker-image
    params:
      build: pull-request-executable
      tag_file: pull-request-sha/SHA_VERSION
      build_args_file: pull-request-executable/BUILD_ARGS
  on_failure:
    do:
    - in_parallel:
      - put: pull-request
        params:
          path: pull-request
          context: build-image
          status: failure
      - task: slack-message
        file: concourse/tasks/common/slack_pr_message.yml
    - put: slack-alert
      params:
        username: 'concourse'
        icon_url: https://concourse-ci.org/images/trademarks/concourse-black.png
        text_file: slack-message/slack-info
        text: |
          :red_circle: *<https://concourse.odeko.com/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}> failed*
          $TEXT_FILE_CONTENT
        silent: true
  on_success:
    do:
    - in_parallel:
      - put: pull-request
        params:
          path: pull-request
          context: build-image
          status: success
      - task: slack-message
        file: concourse/tasks/common/slack_pr_message.yml
    - put: slack-alert
      params:
        username: 'concourse'
        icon_url: https://concourse-ci.org/images/trademarks/concourse-black.png
        text_file: slack-message/slack-info
        text: |
          :thumbsup: *<https://concourse.odeko.com/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}|${BUILD_PIPELINE_NAME}/${BUILD_JOB_NAME}/${BUILD_NAME}> succeeded*
          $TEXT_FILE_CONTENT
        silent: true
